开发计划
===============================

指挥中心 Roadmap
-------------------------------

用户
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

用户，是系统的主要使用角色，每一个系统用户都是独立的、不相关的。

.. container:: table

  .. list-table:: 
    :widths: 10 20 60
    :header-rows: 1

    * - 状态
      - 功能
      - 描述
    * - 
      - 登录
      - 用户使用给定的用户名、密码登录
    * - 
      - 退出
      - 用户退出当前账户
    * - 
      - 查看
      - 用户可以查看自己的账户信息；**TODO：是否可以查看其他用户的账户信息？**
    * - 
      - 更新
      - 用户可以修改自己的部分信息 **TODO：可以修改哪些信息？**

组织
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

组织，是多个用户的组成的一个群体。组织的用户有不同的角色，每个角色可以使用的权限不同。

.. container:: table

  .. list-table:: 
    :widths: 10 20 60
    :header-rows: 1

    * - 状态
      - 功能
      - 描述
    * - X
      - 创建
      - 创建一个新的组织，比如中铁集团。**不对用户开放这个功能，由服务器管理系统完成** 
    * -
      - 列出
      - 列出某个组织内的所有用户
    * -
      - 查看
      - 查看某个组织内的用户
    * - 
      - 添加
      - 添加一个新的已知用户，并授予组织角色
    * - 
      - 更新
      - 更新某个组织内的用户的角色
    * - 
      - 删除
      - 删除某个组织内的用户
  
工程
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

工程，该软件系统的主要资源。通常，一个工程由一个组织的高级管理者创建，由组织内的多个用户共同管理。

.. container:: table

  .. list-table:: 
    :widths: 10 20 60
    :header-rows: 1

    * - 状态
      - 功能
      - 描述
    * - 
      - 创建
      - 创建某个组织内一个新的工程
    * -
      - 列出
      - 列出某个组织内的所有工程
    * -
      - 查看
      - 查看某个组织内的某个工程 **TODO：具体的内容**
    * - 
      - 更新
      - 更新某个组织内的某个工程 **TODO：具体的内容**
    * - 
      - 删除
      - 删除某个组织内的某个工程


TODO
-------------------------------

开发组计划分为 **前端（前）、后端（后）、图像（图）** 3 个常规单元，分别进行各领域的任务。根据进程的推进，会适时演化（变动）出 **移动端（移）、运维（运）** 等等。这些分组的成员不必是固定或者专有的，根据情况需要，进行动态变化和兼任。

总体任务包括：

- 设计
- 开发
- 基础功能测试
- 流量和错误测试
- 部署
- 监控
- 日志记录
- 反馈、回答、更新
- 迭代，直到可用


第一个周期的 TODO list 包括：

- 了解以下关键字相关联的基础知识，已经熟知的略过，还未了解的使用搜狗搜索、百度搜索、bing 搜索等查找相关的信息做些了解：

  - JavaScript 基础 [所有]

    ECMAscript, ECMAscript 6, ECMAscript 7, JavaScript class, JavaScript module, JavaScript 迭代器，for of，什么是 JavaScript 异步，什么是事件驱动，回调函数，面向对象，什么是继承，什么是接口，什么是抽象

  - JavaScript [前端]

    ajax，reactjs 是什么，reactjs component 是什么，reactjs props 是什么，reactjs state 是什么，reactjs render 是什么，reactjs componentDidMount 是什么

  - JavaScript [后端]

    node.js 是什么，node.js 怎么安装，npm 是什么，如何使用 10 行代码编写一个 http 服务器，node.js 的流是什么，node.js 的可读流，node.js 的可写流，node.js 的双工流

    服务器日志，并发，并行，阻塞，非阻塞，异步，同步

  - http [所有]

    HTTP 协议，HTTP 请求方法，HTTP 请求路径，HTTP 请求头，HTTP 请求体，HTTP 响应状态码，HTTP 响应头，HTTP 响应体，HTTP MIME

    json，HTTP 静态文件，HTTP 动态内容

  - 代码仓库 [所有]

    git，github，gitlab，git clone，git push，git pull，git merge，Pull Request，git commit，提交，合并，版本控制，代码仓库

- 访问 https://gitlab.com/ 网站，注册一个用户。这个用户将会成为你在编写代码时的主要用户 [所有]

- 熟悉 https://gitlab.com/ 网站 [所有]

- 编写一个 ReactJs 的例子 Demo [前端]

- 编写一个 Node.js HTTP 服务器 的例子 Demo [后端]

- 构建两个以上的 3D 模型，可以通过网页访问（交互） [图像]

- 阅读 `漫画解读软件开发模式 <http://blog.jobbole.com/113230/>`_ [所有]

- 构建开发组织和代码仓库（部署在 gitlab）  [-]

- 确定“指挥中心”的 vertsion 0.1.0 的功能 [-]

- 定义“指挥中心”的 vertsion 0.1.0 的原型图 [-]

- 定义“指挥中心”的 vertsion 0.1.0 的路由 [-]

- 补充“指挥中心“Roadmap [-]